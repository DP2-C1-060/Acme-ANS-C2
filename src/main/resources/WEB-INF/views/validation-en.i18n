# validation-en.i18n
#
# Copyright (C) 2012-2025 Rafael Corchuelo.
#
# In keeping with the traditional purpose of furthering education and research, it is
# the policy of the copyright owner to permit non-commercial use and redistribution of
# this software. It has been tested carefully, but it is not guaranteed for any particular
# purposes.  The copyright owner does not offer any warranties or representations, nor do
# they accept any liabilities with respect to them.

acme.validation.header.message = Must have from 1 to 75 characters
acme.validation.text.message = Must have from 1 to 255 characters
acme.validation.dateofbirth.message = The date of birth must indicate an age between 18 and 100 years and must not be in the future.

acme.validation.leg.message = The leg contains invalid data
acme.validation.leg.dates.message = The scheduled arrival must be after the scheduled departure
acme.validation.leg.airports.message = The departure and arrival airports must be different
acme.validation.leg.prefix.message = The flight number prefix must match the airline's IATA code
acme.validation.leg.number.message = The flight number already exists in the system (the last 4 digits must be unique)
acme.validation.leg.flight.number.message = The flight number must consist of three uppercase letters followed by four digits (e.g., "ABC1234").
acme.validation.leg.uniqueFlightNumber.message = The flight number must be unique

acme.validation.flight.null.message = The flight must not be null
acme.validation.flight.message = The flight contains invalid data
acme.validation.flight.legs.order.message = Flight legs must be ordered chronologically without overlaps
acme.validation.flight.published.message = Published flights must have at least one leg and no legs in draft mode
acme.validation.flight.selftransfer.message = Self-transfer flights must have at least two legs

acme.validation.activityLog.invalidLeg = The leg must have taken place

acme.validation.agent.duplicated.message = The employee code must be unique
acme.validation.agent.employeecode.message = The first two letters must match the agent's initials
acme.validation.agent.workStartMoment.message = The date work began at the airline must be after its founding date

acme.validation.claim.registrationMoment.message = The claim registration date must be after the date the agent started working at the airline

acme.validation.trackingLog.indicator.message = The status must be consistent with the resolution percentage: PENDING if it is less than 100%, ACCEPTED or REJECTED if it is 100%
acme.validation.trackingLog.resolution.message = Resolution must be provided when the resolution percentage is 100%
acme.validation.trackingLog.resolutionPercentage.message = The percentage must be greater than or equal to the previous one

acme.validation.constraints.NotNull.message = must not be null

acme.validation.manager.experience.message = Years of experience exceed the allowed maximum based on the date of birth
acme.validation.manager.age.tooYoung = The minimum age to work is 16 years.
acme.validation.manager.identifier.invalid = The identifier must start with the first letter of the name and the first letter of the surname
acme.validation.manager.identifier.unique = The identifier must be unique

acme.validation.past.message = FoundationDate must be in the past.
acme.validation.phone.message = Phone must have between 6 and 15 digits.

acme.validation.activityLogMoment.wrong.message = Registration moment must be after land.
acme.validation.member.employeecode.message = Employee code is not like the pattern.
acme.validation.member.duplicated.message = Employee code is duplicated.

