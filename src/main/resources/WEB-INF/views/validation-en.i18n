# validation-en.i18n
#
# Copyright (C) 2012-2025 Rafael Corchuelo.
#
# In keeping with the traditional purpose of furthering education and research, it is
# the policy of the copyright owner to permit non-commercial use and redistribution of
# this software. It has been tested carefully, but it is not guaranteed for any particular
# purposes.  The copyright owner does not offer any warranties or representations, nor do
# they accept any liabilities with respect to them.

acme.validation.header.message = Must have from 1 to 50 characters
acme.validation.text.message = Must have from 0 to 255 characters
acme.validation.dateofbirth.message = The date of birth must indicate an age between 18 and 100 years and must not be in the future.


acme.validation.activityLog.invalidLeg = The leg must have taken place

acme.validation.agent.duplicated.message = The employee code must be unique
acme.validation.agent.employeecode.message = The first two letters must match the agent's initials
acme.validation.agent.workStartMoment.message = The date work began at the airline must be after its founding date

acme.validation.claim.leg.message = The claim must refer to a leg that has already been completed

acme.validation.log.indicator.message = The status must be consistent with the resolution percentage: PENDING if it is less than 100%, ACCEPTED or REJECTED if it is 100%
acme.validation.log.indicator.hundred = The status of a dissatisfaction tracking log must be the same as that of the last tracking log
acme.validation.log.resolution.message = Resolution must be provided when the resolution percentage is 100%
acme.validation.log.resolutionPercentage.message = The percentage must be greater than or equal to the percentage of the previous tracking logs
acme.validation.log.resolutionPercentage.exceptional = A claim cannot have more than two tracking records with a resolution percentage of 100%
acme.validation.log.resolutionPercentage.following = The percentage must be less than or equal to the next highest percentage

acme.validation.constraints.NotNull.message = must not be null

acme.validation.past.message = FoundationDate must be in the past.
acme.validation.phone.message = Phone must have between 6 and 15 digits.

acme.validation.activityLogMoment.wrong.message = Registration moment must be after land.
acme.validation.member.employeecode.message = Employee code is not like the pattern.
acme.validation.member.duplicated.message = Employee code is duplicated.

acme.validation.technician.duplicated-license-number.message = Technicians must have unique licenseNumber.


acme.validation.flight-assignment.leg-has-occurred.message = The selected leg already has occurred 
acme.validation.flight-assignment.member-not-available.message = Message not available
acme.validation.flight-assignment.member-with-overlapping-legs.message = There selected member has overlapping legs
acme.validation.flight-assignment.leg-has-pilot.message = The selected leg has already have a pilot
acme.validation.flight-assignment.leg-has-copilot.message = The selected leg has already have a copilot.
acme.validation.passenger.passportNumber.pattern= Must pattern "^[A-Z0-9]{6,8}$


acme.validation.member.nullornotpattern.message = The identifier must not be null and must follow the correct pattern  
acme.validation.member.notInitials.message = The employee code must start with the user's initials  
acme.validation.member.repeated.message = A different entity already exists with this employeeCode:  

acme.validation.activityLog.wrongMoment.message = ActivityLog registrationMoment must be after the completion of leg 
acme.validation.FlightAssignment.memberNotAvailable.message = That member is not available, flightAssignment can not be created
acme.validation.FlightAssignment.memberHasIncompatibleLegs.message = That member has incompatible legs
acme.validation.FlightAssignment.hasPilot.message = That leg already has a pilot
acme.validation.FlightAssignment.hasCopilot.message = That leg already has a copilot
acme.validation.FlightAssignment.notValidLeg.message = That leg is not valid
acme.validation.FlightAssignment.pastLeg.message = Leg must be in the future
acme.validation.FlightAssignment.notPublishedLeg.message = Leg must be published
acme.validation.FlightAssignment.notValidMember.message = Invalid member

