# validation-en.i18n
#
# Copyright (C) 2012-2025 Rafael Corchuelo.
#
# In keeping with the traditional purpose of furthering education and research, it is
# the policy of the copyright owner to permit non-commercial use and redistribution of
# this software. It has been tested carefully, but it is not guaranteed for any particular
# purposes.  The copyright owner does not offer any warranties or representations, nor do
# they accept any liabilities with respect to them.

acme.validation.header.message = Must have from 1 to 50 characters
acme.validation.text.message = Must have from 0 to 255 characters
acme.validation.dateofbirth.message = The date of birth must indicate an age between 18 and 100 years and must not be in the future.

acme.validation.flight.no-legs.message = A flight must have at least one leg defined.
acme.validation.flight.unpublished-legs.message = A flight cannot be published if it contains unpublished legs.
acme.validation.flight.invalid-currency.message = The currency specified for the flight cost is not valid.
acme.validation.flight.invalid-selftransfer.message = A flight with a single leg cannot be marked as self-transfer.


acme.validation.leg.message = The leg contains invalid data
acme.validation.leg.dates.message = The scheduled arrival must be after the scheduled departure
acme.validation.leg.airports.message = The departure and arrival airports must be different
acme.validation.leg.prefix.message = The flight number prefix must match the airline's IATA code
acme.validation.leg.number.message = The flight number already exists in the system (the last 4 digits must be unique)
acme.validation.leg.flight.number.message = The flight number must consist of three uppercase letters followed by four digits (e.g., "ABC1234")
acme.validation.leg.uniqueFlightNumber.message = The flight number must be unique
acme.validation.leg.airline.mismatch.message = The manager and the aircraft must belong to the same airline.
acme.validation.leg.overlaped-aircraft.message = The aircraft has overlapping legs
acme.validation.leg.wrong-date-order.message = The arrival date must be after the departure date
acme.validation.leg.wrong-iata.message = The flight number prefix does not match the airline's IATA code
acme.validation.leg.wrong-duration.message = The flight duration must be between 1 and 1000 minutes
acme.validation.leg.same-airport.message = The departure and arrival airports must be different
acme.validation.leg.last4-digits-not-unique.message = The last 4 digits of the flight number must be unique
acme.validation.leg.invalid-time-link.message = Consecutive legs must have consistent departure and arrival times
acme.validation.leg.invalid-airport-link.previous.selfTransfer.message = In self-transfer flights, the arrival airport of the previous leg and the departure airport of the current leg must be different
acme.validation.leg.invalid-airport-link.previous.message = The arrival airport of the previous leg and the departure airport of the current leg must be the same
acme.validation.leg.invalid-airport-link.next.selfTransfer.message = In self-transfer flights, the arrival airport of the current leg and the departure airport of the next leg must be different
acme.validation.leg.invalid-airport-link.next.message = The arrival airport of the current leg and the departure airport of the next leg must be the same
acme.validation.leg.repeated-airport.message = Airports must not be repeated in the flight sequence
acme.validation.leg.inactive-aircraft.message = The aircraft must be active

acme.validation.manager.experience.message = Years of experience exceed the allowed maximum based on the date of birth
acme.validation.manager.age.tooYoung = The minimum age to work is 16 years
acme.validation.manager.identifier.invalid = The identifier must start with the first letter of the name and the first letter of the surname
acme.validation.manager.identifier.unique = The identifier must be unique

acme.validation.manager.duplicated-identifier.message = The manager identifier is already in use. Please use a unique identifier.
acme.validators.manager.correct-pattern = The manager identifier must start with the first letter of the name followed by the first letter of the surname.

acme.validation.activityLog.invalidLeg = The leg must have taken place

acme.validation.agent.duplicated.message = The employee code must be unique
acme.validation.agent.employeecode.message = The first two letters must match the agent's initials
acme.validation.agent.workStartMoment.message = The date work began at the airline must be after its founding date

acme.validation.claim.registrationMoment.message = The claim registration date must be after the date the agent started working at the airline and after the arrival date of the leg

acme.validation.log.indicator.message = The status must be consistent with the resolution percentage: PENDING if it is less than 100%, ACCEPTED or REJECTED if it is 100%
acme.validation.log.resolution.message = Resolution must be provided when the resolution percentage is 100%
acme.validation.log.resolutionPercentage.message = The percentage must be greater than or equal to the previous one

acme.validation.constraints.NotNull.message = must not be null

acme.validation.manager.experience.message = Years of experience exceed the allowed maximum based on the date of birth
acme.validation.manager.age.tooYoung = The minimum age to work is 16 years.
acme.validation.manager.identifier.invalid = The identifier must start with the first letter of the name and the first letter of the surname
acme.validation.manager.identifier.unique = The identifier must be unique

acme.validation.past.message = FoundationDate must be in the past.
acme.validation.phone.message = Phone must have between 6 and 15 digits.

acme.validation.activityLogMoment.wrong.message = Registration moment must be after land.
acme.validation.member.employeecode.message = Employee code is not like the pattern.
acme.validation.member.duplicated.message = Employee code is duplicated.

acme.validation.technician.duplicated-license-number.message = Technicians must have unique licenseNumber.


acme.validation.flight-assignment.leg-has-occurred.message = The selected leg already has occurred 
acme.validation.flight-assignment.member-not-available.message = Message not available
acme.validation.flight-assignment.member-with-overlapping-legs.message = There selected member has overlapping legs
acme.validation.flight-assignment.leg-has-pilot.message = The selected leg has already have a pilot
acme.validation.flight-assignment.leg-has-copilot.message = The selected leg has already have a copilot.
acme.validation.passenger.passportNumber.pattern= Must pattern "^[A-Z0-9]{6,8}$


acme.validation.member.nullornotpattern.message = The identifier must not be null and must follow the correct pattern  
acme.validation.member.notInitials.message = The employee code must start with the user's initials  
acme.validation.member.repeated.message = A different entity already exists with this employeeCode:  

acme.validation.activityLog.wrongMoment.message = ActivityLog registrationMoment must be after the completion of leg 
acme.validation.FlightAssignment.memberNotAvailable.message = That member is not available, flightAssignment can not be created
acme.validation.FlightAssignment.memberHasIncompatibleLegs.message = That member has incompatible legs
acme.validation.FlightAssignment.hasPilot.message = That leg already has a pilot
acme.validation.FlightAssignment.hasCopilot.message = That leg already has a copilot
acme.validation.FlightAssignment.notValidLeg.message = That leg is not valid


